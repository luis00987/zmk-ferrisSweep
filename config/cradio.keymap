/*
  * Copyright (c) 2020 The ZMK Contributors
  *test
  * SPDX-License-Identifier: MIT
  */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            label = "hmr";
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <280>;
            hold-trigger-on-release;             // delay positional check until key-release
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            require-prior-idle-ms = <150>;
            quick-tap-ms = <175>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32 33>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            label = "hml";
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <280>;
            hold-trigger-on-release;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            quick-tap-ms = <175>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 32 33 30 31>;
        };

        tapSk_holdLayer: tapSk_holdLayer {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPSK_HOLDLAYER";
            bindings = <&mo>, <&sk>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            retro-tap;
        };
    };

    combos {
        compatible = "zmk,combos";

        capWords {
            bindings = <&caps_word>;
            key-positions = <31 32>;
            timeout-ms = <150>;
            require-prior-idle-ms = <100>;
            layers = <0>;
        };

        toSymb {
            bindings = <&mo 6>;
            key-positions = <30 33>;
            timeout-ms = <150>;
            require-prior-idle-ms = <100>;
            layers = <0>;
            slow-release;
        };

        toIpadSC {
            bindings = <&mo 2>;
            key-positions = <32 30>;
            timeout-ms = <150>;
            slow-release;
            require-prior-idle-ms = <100>;
            layers = <0>;
        };

        toAdj {
            bindings = <&mo 7>;
            key-positions = <0 4>;
            timeout-ms = <150>;
            slow-release;
            require-prior-idle-ms = <100>;
            layers = <0>;
        };

        toFn {
            bindings = <&mo 5>;
            key-positions = <31 33>;
            timeout-ms = <150>;
            slow-release;
            require-prior-idle-ms = <100>;
            layers = <0>;
        };

        escL {
            timeout-ms = <40>;
            bindings = <&kp ESCAPE>;
            key-positions = <3 2>;
            require-prior-idle-ms = <100>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        L0 {
            bindings = <
&kp Q  &kp W  &kp E  &kp R      &kp T                            &kp Y        &kp U        &kp I      &kp O    &kp P
&kp A  &kp S  &kp D  &kp F      &kp G                            &kp H        &kp J        &kp K      &kp L    &kp SEMI
&kp Z  &kp X  &kp C  &kp V      &kp B                            &kp N        &kp M        &kp COMMA  &kp DOT  &kp FSLH
                     &lt 8 TAB  &tapSk_holdLayer 1 LEFT_SHIFT    &lt 3 SPACE  &lt 4 ENTER
            >;
        };

        customWinSc {
            bindings = <
&kp LG(LC(F4))  &kp LG(TAB)    &kp LC(LG(LEFT_ARROW))  &kp LC(LG(RIGHT))  &kp LG(LC(D))    &none  &none  &none  &none  &none
&kp LC(A)       &kp LC(X)      &kp LC(C)               &kp LC(V)          &kp DEL          &none  &none  &none  &none  &none
&kp LC(Z)       &kp C_AC_HOME  &kp LG(LS(S))           &kp LG(E)          &kp LA(F4)       &none  &none  &none  &none  &none
                                                       &none              &none            &none  &none
            >;
        };

        customIpadSC {
            bindings = <
&none      &none      &none                 &none      &none    &none  &none  &none  &none  &none
&kp LG(A)  &kp LG(X)  &kp LG(C)             &kp LG(V)  &none    &none  &none  &none  &none  &none
&kp LG(Z)  &none      &kp LG(LS(NUMBER_4))  &kp LG(H)  &none    &none  &none  &none  &none  &none
                                            &none      &none    &none  &none
            >;
        };

        num {
            bindings = <
&none         &none     &none      &none      &none    &kp MINUS  &kp N7   &kp N8  &kp N9  &kp FSLH
&kp LEFT_GUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none    &kp PLUS   &kp N4   &kp N5  &kp N6  &kp ASTERISK
&none         &none     &none      &none      &none    &kp N0     &kp N1   &kp N2  &kp N3  &kp EQUAL
                                   &none      &none    &none      &kp DOT
            >;
        };

        nav-media {
            bindings = <
&none         &none     &none      &none      &none    &kp C_VOL_UP  &kp PG_UP   &kp UP      &kp PG_DN   &kp LG(K_MUTE)
&kp LEFT_GUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none    &kp HOME      &kp LEFT    &kp DOWN    &kp RIGHT   &kp END
&none         &none     &none      &none      &none    &kp C_VOL_DN  &kp C_PREV  &kp C_PLAY  &kp C_NEXT  &kp CAPS
                                   &none      &none    &none         &none
            >;
        };

        fn {
            bindings = <
&kp F1  &kp F2   &kp F3   &kp F4   &none    &none  &none      &none      &none     &none
&kp F5  &kp F6   &kp F7   &kp F8   &none    &none  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LEFT_GUI
&kp F9  &kp F10  &kp F11  &kp F12  &none    &none  &none      &none      &none     &none
                          &none    &none    &none  &none
            >;
        };

        symb {
            bindings = <
&none  &none  &none  &none  &none    &none  &none  &none  &none  &none
&none  &none  &none  &none  &none    &none  &none  &none  &none  &none
&none  &none  &none  &none  &none    &none  &none  &none  &none  &none
                     &none  &none    &none  &none
            >;
        };

        adj {
            bindings = <
  &none  &none  &none  &none  &none          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2   &bt BT_SEL 3  &bt BT_SEL 4    
  &none  &none  &none  &none  &none          &none         &kp C_BRI_UP  &kp C_BRI_DEC  &none         &bt BT_CLR      
  &none  &none  &none  &none  &none          &none         &none         &none          &none         &none 
                       &none  &bootloader    &bootloader           &out OUT_TOG
            >;
        };

        mods {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                        &trans  &trans    &trans  &trans
            >;
        };
    };
};
